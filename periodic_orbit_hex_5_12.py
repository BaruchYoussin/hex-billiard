# In this file we find the values of periodic orbits of order 12, winding number 5, for the hex billiard.
import pickle
import mpmath as mp
import general_lib
import billiard_hex

mp.mp.dps = 100
num_iter = 12

def error_iteration(phi: mp.mpf, p: mp.mpf) -> tuple:
    """Returns the difference between the original point and the 12 iterations of the billiard on it"""
    iteration_result = general_lib.iterate_function(
        general_lib.reflect_line_at_boundary, (phi, p), num_iter=num_iter,
        parametric_boundary=billiard_hex.param_boundary)[num_iter]
    return iteration_result[0] - phi, iteration_result[1] - p


initial_values = (mp.mpf(0.26), mp.mpf(0.447))  # Taken from the plots near this point
root = mp.findroot(error_iteration, initial_values, tol=mp.mpf(10) ** (-1.5 * mp.mp.dps), maxsteps=10)
root = (root[0], root[1])
periodic_orbit = general_lib.iterate_function(
        general_lib.reflect_line_at_boundary, root, num_iter=num_iter,
        parametric_boundary=billiard_hex.param_boundary)
print(mp.nstr(periodic_orbit, n=mp.mp.dps).replace("), (", "),\n("))
# [(0.2612330773569968496501186287271466344445388361979749639879352675483382545073733321518729704407139823,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (2.880359576232796388812524754552356249752630563177130856987009324759478151778835666476161854901403086,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (5.497220833339985580421190934192984774773154501823151332279509588061365598317721663198597679344242429,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (1.833162025036198642658310293459188621686907430052095583328694460656872683016766000266816913120697396,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (4.45002328214338783426697647309981714670743136869811605862119472395876012955565199698925273756353674,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (0.7859644738396008965040958323660209936211842969270603096703795965542672142546963340574719713399917071,
# 0.44734020841437282636008329111636249144119286684611643726110151396381914202623236090037190650682077),
# (3.40282573094679008811276201200664951864170823557308078496287985985615466079358233077990779578283105,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (6.021952229822589627275168137831859133949799962552236677961953917067294558065044665104196680243520154,
# 0.44734020841437282636008329111636249144119286684611643726110151396381914202623236090037190650682077),
# (2.355628179750192341958547550913481890575985102448045511304564995753549192031512664570562854002125361,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207701),
# (4.974754678625991881120953676738691505884076829427201404303639052964689089302974998894851738462814465,
# 0.44734020841437282636008329111636249144119286684611643726110151396381914202623236090037190650682077),
# (1.308430628553594595804333089820314262510261969323010237646250131650943723269442998361217912221419672,
# 0.44734020841437282636008329111636249144119286684611643726110151396381914202623236090037190650682077),
# (3.927557127429394134966739215645523877818353696302166130645324188862083620540905332685506796682108776,
# 0.4473402084143728263600832911163624914411928668461164372611015139638191420262323609003719065068207698),
# (0.2612330773569968496501186287271466344445388361979749639879352675483382545073733321518729704407139833,
# 0.44734020841437282636008329111636249144119286684611643726110151396381914202623236090037190650682077)]

initial_phi = root[0]
initial_p = root[1]

orbit = general_lib.calculate_orbit(parametric_boundary=billiard_hex.param_boundary, initial_phi=initial_phi,
                                    initial_p=initial_p, num_iterations=num_iter)

filename = f"orbits_hex/singular_orbit_5_12_prec100.pkl"
with open(filename, "wb") as file:
    pickle.dump(orbit, file)
print(f"Created {filename}")
# Created orbits_hex/singular_orbit_5_12_prec100.pkl
